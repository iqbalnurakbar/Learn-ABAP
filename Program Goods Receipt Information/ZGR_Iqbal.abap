*&---------------------------------------------------------------------*
*& Report ZGR_Iqbal
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
REPORT ZGR_Iqbal.
TABLES: MKPF, MSEG, MAKT, MARA.

TYPES: BEGIN OF TY_RESULT,
         MBLNR TYPE   MSEG-MBLNR,
         MJAHR TYPE   MSEG-MJAHR,
         ZEILE TYPE   MSEG-ZEILE,
         BUDAT TYPE   MKPF-BUDAT,
         WERKS TYPE   MSEG-WERKS,
         LGORT TYPE   MSEG-LGORT,
         BWART TYPE   MSEG-BWART,
         MATNR TYPE   MSEG-MATNR,
         MAKTX TYPE   MAKT-MAKTX,
         MENGE TYPE   MSEG-MENGE,
         MEINS TYPE   MARA-MEINS,
       END OF TY_RESULT.

TYPES: TT_RESULT TYPE TABLE OF TY_RESULT.
DATA: GS_RESULT TYPE TY_RESULT,
      GT_RESULT TYPE TT_RESULT.

CONSTANTS: GC_MESSAGE1 TYPE STRING VALUE 'DATA NOT FOUND',
           GC_MESSAGE2 TYPE STRING VALUE 'PLEASE FILL THE INPUT'.


SELECT-OPTIONS: S_MBLNR FOR MKPF-MBLNR.
PARAMETERS: P_MJAHR TYPE MKPF-MJAHR OBLIGATORY,
            P_WERKS TYPE MSEG-WERKS OBLIGATORY.
SELECT-OPTIONS: S_MATNR FOR MSEG-MATNR.

INITIALIZATION.
  S_MBLNR-LOW = '4900000012'.
  APPEND S_MBLNR.


AT SELECTION-SCREEN.
  SELECT COUNT(*)
    FROM MKPF
    WHERE MBLNR IN S_MBLNR.
  IF SY-SUBRC <> 0.
    MESSAGE |{ GC_MESSAGE1 } FOR { S_MBLNR-LOW }| TYPE 'S' DISPLAY LIKE 'E'.
  ENDIF.

  IF S_MBLNR IS INITIAL.
    MESSAGE |{ GC_MESSAGE2 } { S_MBLNR-LOW }  | TYPE 'S' DISPLAY LIKE 'E'.
  ENDIF.

START-OF-SELECTION.
  SELECT MS~MBLNR,
         MS~MJAHR,
         MS~ZEILE,
         MK~BUDAT,
         MS~WERKS,
         MS~LGORT,
         MS~BWART,
         MS~MATNR,
         MS~MENGE
      FROM MSEG AS MS
      INNER JOIN MKPF AS MK ON MS~MBLNR = MK~MBLNR AND MS~MJAHR = MK~MJAHR
      INTO CORRESPONDING FIELDS OF TABLE @GT_RESULT
      WHERE MS~MBLNR IN @S_MBLNR
      AND MS~WERKS = @P_WERKS
      AND MS~MJAHR = @P_MJAHR
      AND MS~MATNR IN @S_MATNR
      .

  IF SY-SUBRC = 0.
    SORT GT_RESULT BY MBLNR MJAHR ZEILE.
    DELETE ADJACENT DUPLICATES FROM GT_RESULT COMPARING MBLNR MJAHR ZEILE.

    SELECT MATNR,
           MAKTX
      FROM MAKT
      INTO TABLE @DATA(GT_MAKT)
      FOR ALL ENTRIES IN @GT_RESULT
      WHERE MATNR = @GT_RESULT-MATNR
      AND SPRAS = @SY-LANGU.
    IF SY-SUBRC = 0.
      SORT GT_MAKT BY MATNR.
    ENDIF.

    SELECT MATNR,
           MEINS
      FROM MARA
      INTO TABLE @DATA(GT_MARA)
      FOR ALL ENTRIES IN @GT_RESULT
      WHERE MATNR = @GT_RESULT-MATNR.
    IF SY-SUBRC = 0.
      SORT GT_MARA BY MATNR.
    ENDIF.

    LOOP AT GT_RESULT INTO GS_RESULT.
      READ TABLE GT_MAKT INTO DATA(GS_MAKT) WITH KEY MATNR = GS_RESULT-MATNR.
      IF SY-SUBRC = 0.
        GS_RESULT-MAKTX = GS_MAKT-MAKTX.
      ENDIF.

      READ TABLE GT_MARA INTO DATA(GS_MARA) WITH KEY MATNR = GS_RESULT-MATNR.
      IF SY-SUBRC = 0.
        GS_RESULT-MEINS = GS_MARA-MEINS.
      ENDIF.

      MODIFY GT_RESULT FROM GS_RESULT.

    ENDLOOP.
    CL_DEMO_OUTPUT=>DISPLAY( GT_RESULT ).
  ENDIF.